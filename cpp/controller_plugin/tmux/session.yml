# do not modify these
root: ./
name: simulation
socket_name: mrs
attach: false
tmux_options: -f /etc/ctu-mrs/tmux.conf
# you can modify these
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650
startup_window: control
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  # - simulator:
  #     layout: tiled
  #     panes:
  #       - waitForRos; roslaunch mrs_multirotor_simulator multirotor_simulator.launch custom_config:=./config/simulator.yaml
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_uav_gazebo_simulation simulation.launch world_name:=grass_plane gui:=true custom_config:=./config/simulator.yaml
        # - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE"
        # - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 --$UAV_TYPE --enable-rangefinder --enable-pendulum --enable-ground-truth --pos 0 0 0 0"    
        - waitForControl; gz camera -c gzclient_camera -f $UAV_NAME; history -s gz camera -c gzclient_camera -f $UAV_NAME
  - spawn:
        layout: tiled
        panes:
        - waitForGazebo; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-pendulum load_mass:=0.1 num_links:=1 chain_length:=1.0 --enable-ground-truth --pos 0 0 3 0"    
  - hw_api:
      layout: tiled
      panes:
        # - waitForTime; roslaunch mrs_multirotor_simulator hw_api.launch custom_config:=./config/hw_api.yaml
        - waitForTime; roslaunch mrs_uav_px4_api api.launch custom_config:=./config/hw_api.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_autostart automatic_start.launch
        - waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; sleep 2; rosservice call /$UAV_NAME/hw_api/offboard
  # - midair_activation:
  #     # disabled the "takeoff" section and turn on the "individual_takeoff_platform" in the simulator config
  #     layout: tiled
  #     panes:
  #       - waitForControl; rosservice call /$UAV_NAME/hw_api/arming 1; rosservice call /$UAV_NAME/uav_manager/midair_activation
  - status:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_status status.launch
  - control:
      layout: tiled
      panes:
        - waitForHw; roslaunch mrs_uav_core core.launch
          platform_config:=`rospack find mrs_uav_gazebo_simulation`/config/mrs_uav_system/$UAV_TYPE.yaml
          custom_config:=./config/custom_config.yaml
          world_config:=./config/world_config.yaml
          network_config:=./config/network_config.yaml
        # - 'history -s roscore'
  # - rviz:
  #     layout: tiled
  #     panes:
  #       - waitForControl; roslaunch mrs_uav_core rviz.launch
  #       - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  #       - waitForControl; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
  # - goto:
  #     layout: tiled
  #     panes:
  #       - 'history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, 10.0, 1.5, 0.0\]\"'

